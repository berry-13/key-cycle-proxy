[package]
name = "key-cycle-proxy"
version = "1.0.0"
edition = "2021"
authors = ["KeyCycleProxy Team"]
description = "A high-performance OpenAI API key rotation proxy written in Rust"
license = "MIT"

[[bin]]
name = "key-cycle-proxy"
path = "src/main.rs"

[lib]
name = "key_cycle_proxy"
path = "src/lib.rs"

[dependencies]
# HTTP server and async runtime
axum = { version = "0.7", features = ["json", "query", "tower-log"] }
tokio = { version = "1.35", features = ["full"] }
tokio-stream = "0.1"
tower = { version = "0.4", features = ["full"] }
tower-http = { version = "0.5", features = ["cors", "compression-full", "timeout", "request-id", "trace", "limit"] }
hyper = { version = "1.0", features = ["full"] }
hyper-rustls = { version = "0.26", features = ["http2"] }

# HTTP client
reqwest = { version = "0.11", features = ["json", "rustls-tls", "stream"], default-features = false }

# JSON and serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Configuration
config = "0.14"
toml = "0.8"
clap = { version = "4.0", features = ["derive", "env"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Security
secrecy = { version = "0.8", features = ["serde"] }

# Concurrency and data structures
dashmap = "5.5"
arc-swap = "1.6"
once_cell = "1.19"

# Rate limiting
governor = "0.6"

# Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Time utilities
time = { version = "0.3", features = ["serde"] }

# Backoff strategies
backoff = { version = "0.4", features = ["tokio"] }

# Utilities
uuid = { version = "1.0", features = ["v4"] }
futures = "0.3"
bytes = "1.5"

[dev-dependencies]
# Testing
tokio-test = "0.4"
tower-test = "0.4"
wiremock = "0.6"
tempfile = "3.8"
criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "benchmarks"
harness = false

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true